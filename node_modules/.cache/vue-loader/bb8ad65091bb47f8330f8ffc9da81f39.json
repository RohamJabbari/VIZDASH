{"remainingRequest":"/Users/rohamjabbari/Desktop/VIS/A5/jabbarir79_A5/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/rohamjabbari/Desktop/VIS/A5/jabbarir79_A5/src/components/ChoroplethMap.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/rohamjabbari/Desktop/VIS/A5/jabbarir79_A5/src/components/ChoroplethMap.vue","mtime":1705750312187},{"path":"/Users/rohamjabbari/Desktop/VIS/A5/jabbarir79_A5/node_modules/cache-loader/dist/cjs.js","mtime":1705744300535},{"path":"/Users/rohamjabbari/Desktop/VIS/A5/jabbarir79_A5/node_modules/babel-loader/lib/index.js","mtime":1705744300565},{"path":"/Users/rohamjabbari/Desktop/VIS/A5/jabbarir79_A5/node_modules/cache-loader/dist/cjs.js","mtime":1705744300535},{"path":"/Users/rohamjabbari/Desktop/VIS/A5/jabbarir79_A5/node_modules/vue-loader/lib/index.js","mtime":1705744299123}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ChoroplethMap.vue"],"names":[],"mappings":";;AAsfile":"ChoroplethMap.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"vis-component\" ref=\"chart\">\n    <h6>Carbon Stocks / Land Cover Map</h6>\n    <svg id=\"map-svg\" :width=\"svgWidth\" :height=\"svgHeight\" @dblclick=\"removeSelection\">\n      <defs>\n        <pattern id=\"stripes\" width=\"4\" height=\"4\" patternUnits=\"userSpaceOnUse\" patternTransform=\"rotate(45)\">\n          <rect width=\"2\" height=\"4\" transform=\"translate(0,0)\" fill=\"white\"></rect>\n        </pattern>\n      </defs>\n      <g class=\"chart-group\" ref=\"chartGroup\">\n        <g class=\"grid-background\" ref=\"gridBackground\"></g>\n        <g class=\"axis axis-x\" ref=\"axisX\"></g>\n        <g class=\"axis axis-y\" ref=\"axisY\"></g>\n        <g class=\"points-group\" ref=\"pointsGroup\"></g>\n      </g>\n    </svg>\n    <div id=\"tooltip\" class=\"tooltip\" style=\"opacity:0;\"></div>\n  </div>\n</template>\n\n<script>\n\nimport mapWorld from '@/assets/world-geo.json';\nimport * as d3 from 'd3';\n\nexport default {\n  name: 'ChoroplethMap',\n  props: {\n  },\n  data() {\n    const svgWidth = window.innerWidth * 4 / 12;\n    const svgHeight = window.innerHeight * 0.35;\n    return {\n      svgWidth: svgWidth,\n      svgHeight: svgHeight,\n      svgPadding: {\n        top: 5, right: 15, bottom: 60, left: 60,\n      }\n    }\n  },\n  mounted() {\n    this.drawMap();\n  },\n  methods: {\n    removeSelection() {\n      this.$store.commit('removeSelectedCountries');\n    },\n    drawMap() {\n      const svg = d3.select(this.$refs.chartGroup);\n      const projection = d3.geoMercator().fitSize([this.svgWidth, this.svgHeight], mapWorld);\n\n      const pathGenerator = d3.geoPath().projection(projection);\n      const tooltip = d3.select(\"#tooltip\");\n\n      svg.selectAll('.country')\n        .data(mapWorld.features)\n        .join('path')\n        .attr('class', 'country')\n        .attr('d', pathGenerator)\n        .attr('transform', 'scale(1)')\n        .attr('fill', d => {\n          const countryData = this.filteredData.find(s => s.id === d.id);\n          const isSelected = this.selectedCountries.includes(d.id);\n          \n          if (countryData) {\n          if (countryData.carbonStocks > 200 || countryData.landCover > 130) {\n            return \"url(#stripes)\"; // Apply stripe pattern\n          } else {\n            if (isSelected) {\n              if (this.brushedCountries.includes(countryData.id)) {\n                \n                return 'rgb(253, 255, 181)';\n              } else {\n                return 'rgb(150, 150, 150)'\n              }\n            } else {\n              if (this.brushedCountries.includes(countryData.id)) {\n                return this.getColorForCountry(countryData);\n              } else {\n                return 'darkgrey';\n              }\n            }\n          }} else {\n            return 'darkgray';\n          }\n        })\n        .attr('opacity', 1)\n        .on('mouseover', (event, d) => {\n          let landCoverTemp;\n          let carbonStocksTemp;\n          let disastersFreqTemp;\n          const hoveringLandCover = this.landCover.find(country => country.id === d.id);\n          const hoveringCarbonStocks = this.carbonStocks.find(country => country.id === d.id);\n          const hoveringDisasters = this.disastersFreq.find(country => country.id === d.id)\n          if (hoveringLandCover) {\n            landCoverTemp = hoveringLandCover.value === 0 ? 'No Data' : hoveringLandCover.value.toFixed(4);\n          } else {\n            landCoverTemp = 'No Data';\n          }\n          if (hoveringCarbonStocks) {\n            carbonStocksTemp = hoveringCarbonStocks.value === 0 ? 'No Data' : hoveringCarbonStocks.value.toFixed(4);\n          } else {\n            carbonStocksTemp = 'No Data';\n          }\n          if (hoveringDisasters) {\n            disastersFreqTemp = hoveringDisasters.value === -1 ? 'No Data' : hoveringDisasters.value;\n          } else {\n            disastersFreqTemp = 'No Data';\n          }\n          tooltip.transition()\n            .duration(200)\n            .style('opacity', 1);\n\n            \n          tooltip.html(`\n            <table>\n              <tr><td class=\"label\">Country:</td>         <td class=\"value\">${d.properties.name}</td></tr>\n              <tr><td class=\"label\">CarbonStocks:</td>        <td class=\"value\">${carbonStocksTemp}</td></tr>\n              <tr><td class=\"label\">LandCoverIndex:</td>     <td class=\"value\">${landCoverTemp}</td></tr>\n              <tr><td class=\"label\">disastersFreq:</td>     <td class=\"value\">${disastersFreqTemp}</td></tr>\n            </table>\n          `)\n            .style('left', (event.clientX - 375) + 'px')\n            .style('top', (event.clientY - 100) + 'px');\n        })\n        .on('mouseout', function() {\n          tooltip.transition()\n            .duration(300)\n            .style('opacity', 0);\n        })\n        .on('click', (event, d) => this.handleClick(d.id))\n    },\n    handleClick(countryId) {\n      const isSelected = this.selectedCountries.includes(countryId);\n      if (!isSelected) {\n        this.$store.commit('changeSelectedCountries', countryId);\n      } else {\n        this.$store.commit('removeSelectedCountry', countryId);\n      }\n    },\n    getColorForCountry(countryData) {\n      const colors = [\n        \"rgb(230, 230, 230)\",\n        \"rgb(220, 183, 210)\", // 0 1 \n        \"rgb(211, 146, 194)\", // 0 0 \n        \"rgb(195, 238, 199)\", // 1 2 \n        \"rgb(151, 185, 199)\", \n        \"rgb(168, 140, 191)\", // 1 0 \n        \"rgb(148, 221, 166)\", // 2 2 \n        \"rgb(129, 186, 162)\", // 2 1 \n        \"rgb(107, 120, 155)\",\n      ];\n      let landCoverCategory = this.getLandCoverCategory(countryData.landCover);\n      let carbonStocksCategory = this.getCarbonStocksCategory(countryData.carbonStocks);\n\n      if (carbonStocksCategory === 'low' && landCoverCategory === 'low') return colors[0];\n      if (carbonStocksCategory === 'low' && landCoverCategory === 'medium') return colors[1];\n      if (carbonStocksCategory === 'low' && landCoverCategory === 'high') return colors[2];\n      if (carbonStocksCategory === 'medium' && landCoverCategory === 'low') return colors[3];\n      if (carbonStocksCategory === 'medium' && landCoverCategory === 'medium') return colors[4];\n      if (carbonStocksCategory === 'medium' && landCoverCategory === 'high') return colors[5];\n      if (carbonStocksCategory === 'high' && landCoverCategory === 'low') return colors[6];\n      if (carbonStocksCategory === 'high' && landCoverCategory === 'medium') return colors[7];\n      if (carbonStocksCategory === 'high' && landCoverCategory === 'high') return colors[8];\n      \n    },\n    getLandCoverCategory(landCover) {\n      const xFirstTick = this.landCoverMin + (this.landCoverMax - this.landCoverMin)/3;\n      const xSecondTick = this.landCoverMin + 2*(this.landCoverMax - this.landCoverMin)/3;\n      const xThresholds = [xFirstTick, xSecondTick];\n      if (landCover <= xThresholds[0]) return 'low';\n      if (landCover <= xThresholds[1]) return 'medium';\n      return 'high';\n    },\n\n    getCarbonStocksCategory(carbonStocks) {\n      const yFirstTick = this.carbonStocksMin + (this.carbonStocksMax - this.carbonStocksMin)/3;\n      const ySecondTick = this.carbonStocksMin + 2*(this.carbonStocksMax - this.carbonStocksMin)/3;\n      const yThresholds = [yFirstTick, ySecondTick]; \n      if (carbonStocks <= yThresholds[0]) return 'low';\n      if (carbonStocks <= yThresholds[1]) return 'medium';\n      return 'high';\n    },\n  },\n  computed: {\n    filteredData() {\n      return this.combinedData.filter(d => d.landCover !== 0);\n    },\n    combinedData() {\n      let combined = this.carbonStocks.map(cs => {\n        let landCoverData = this.landCover.find(landCover => landCover.id === cs.id);\n        let disastersFreqData = this.disastersFreq.find(disastersFreq => disastersFreq.id === cs.id);\n        return {\n          id: cs.id,\n          country: cs.country,\n          carbonStocks: cs.value,\n          landCover: landCoverData ? landCoverData.value: 0,\n          disastersFreq: disastersFreqData ? disastersFreqData.value: -1\n        };\n      });\n      return combined;\n    },\n    landCover: {\n      get() {\n        return this.$store.getters.landCover;\n      }\n    },\n    carbonStocks: {\n      get() {\n        return this.$store.getters.carbonStocks;\n      }\n    },\n    disastersFreq: {\n      get() {\n        return this.$store.getters.disastersFreq;\n      }\n    },\n    selectedCountries: {\n      get() {\n        return this.$store.getters.selectedCountries;\n      }\n    },\n    brushedCountries: {\n      get() {\n        return this.$store.getters.brushedCountries;\n      }\n    },\n    carbonStocksMax() {\n      return 200;\n    },\n    carbonStocksMin() {\n      return 0;\n    },\n    landCoverMax() {\n      return 130;\n    },\n    landCoverMin() {\n      return 70;\n    },\n  },\n\n  watch: {\n    disastersFreq: {\n      handler() {\n        this.drawMap();\n      },\n      deep: true,\n    },\n    carbonStocks: {\n      handler() {\n        this.drawMap();\n      },\n      deep: true,\n    },\n    landCover: {\n      handler() {\n        this.drawMap();\n      },\n      deep: true,\n    },\n    brushedCountries: {\n      handler() {\n        this.drawMap();\n      },\n      deep: true,\n    },\n    selectedCountries: {\n      handler() {\n        this.drawMap();\n      },\n      deep: true,\n    }\n  },\n}\n</script>\n\n<style>\n  .country {\n    stroke: #5b5b5b;\n    stroke-width: 1px;\n  }\n\n  .country:hover {\n    fill-opacity: 0.7;\n    stroke: rgb(253, 255, 181);\n  }\n\n  .tooltip {\n    position: absolute;\n    text-align: center;\n    padding: 8px;\n    font: 12px sans-serif;\n    background: rgb(253, 241, 252);\n    border: 1px;\n    border-radius: 8px;\n    pointer-events: none;\n  }\n\n.tooltip table {\n  width: 100%;\n  border-collapse: collapse;\n}\n\n.tooltip .label {\n  width: 150px;\n  text-align: left;\n  font-size: 12px;\n  white-space: nowrap;\n}\n\n.tooltip .country_value {\n  width: 300px;\n  text-align: right;\n  font-size: 12px;\n  white-space: nowrap;\n}\n\n.tooltip .value {\n  width: 150px;\n  font-size: 12px;\n  text-align: right;\n  white-space: nowrap;\n}\n\n.small-country-circle {\n    stroke: red; /* Adjust the color as needed */\n    stroke-width: 3;\n    opacity: 0.7;\n}\n</style>\n"]}]}